# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: generated/backupChapter.proto, generated/backupTracking.proto, generated/backupHistory.proto, generated/backupManga.proto, generated/backupCategory.proto, generated/backupSource.proto, generated/backup.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


@dataclass
class BackupChapter(betterproto.Message):
    url: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    scanlator: str = betterproto.string_field(3)
    read: bool = betterproto.bool_field(4)
    bookmark: bool = betterproto.bool_field(5)
    last_page_read: int = betterproto.int32_field(6)
    date_fetch: int = betterproto.uint64_field(7)
    date_upload: int = betterproto.uint64_field(8)
    chapter_number: float = betterproto.float_field(9)
    source_order: int = betterproto.int32_field(10)


@dataclass
class BackupTracking(betterproto.Message):
    sync_id: int = betterproto.int32_field(1)
    library_id: int = betterproto.uint64_field(2)
    media_id: int = betterproto.int32_field(3)
    tracking_url: str = betterproto.string_field(4)
    title: str = betterproto.string_field(5)
    last_chapter_read: float = betterproto.float_field(6)
    total_chapter: int = betterproto.int32_field(7)
    score: float = betterproto.float_field(8)
    status: int = betterproto.int32_field(9)
    started_reading_date: int = betterproto.uint64_field(10)
    finished_reading_date: int = betterproto.uint64_field(11)


@dataclass
class BrokenBackupHistory(betterproto.Message):
    url: str = betterproto.string_field(1)
    last_read: int = betterproto.uint64_field(2)


@dataclass
class BackupHistory(betterproto.Message):
    url: str = betterproto.string_field(1)
    last_read: int = betterproto.uint64_field(2)


@dataclass
class BackupManga(betterproto.Message):
    source: int = betterproto.uint64_field(1)
    url: str = betterproto.string_field(2)
    title: str = betterproto.string_field(3)
    artist: str = betterproto.string_field(4)
    author: str = betterproto.string_field(5)
    description: str = betterproto.string_field(6)
    genre: List[str] = betterproto.string_field(7)
    status: int = betterproto.int32_field(8)
    thumbnail_url: str = betterproto.string_field(9)
    date_added: int = betterproto.uint64_field(13)
    viewer: int = betterproto.int32_field(14)
    chapters: List["BackupChapter"] = betterproto.message_field(16)
    categories: List[int] = betterproto.int32_field(17)
    tracking: List["BackupTracking"] = betterproto.message_field(18)
    favorite: bool = betterproto.bool_field(100)
    chapter_flags: int = betterproto.int32_field(101)
    broken_history: List["BrokenBackupHistory"] = betterproto.message_field(102)
    viewer_flags: int = betterproto.int32_field(103)
    history: List["BackupHistory"] = betterproto.message_field(104)


@dataclass
class BackupCategory(betterproto.Message):
    name: str = betterproto.string_field(1)
    order: int = betterproto.int32_field(2)
    flags: int = betterproto.int32_field(100)


@dataclass
class BrokenBackupSource(betterproto.Message):
    name: str = betterproto.string_field(1)
    source_id: int = betterproto.uint64_field(2)


@dataclass
class BackupSource(betterproto.Message):
    name: str = betterproto.string_field(1)
    source_id: int = betterproto.uint64_field(2)


@dataclass
class Backup(betterproto.Message):
    backup_manga: List["BackupManga"] = betterproto.message_field(1)
    backup_categories: List["BackupCategory"] = betterproto.message_field(2)
    backup_broken_sources: List["BrokenBackupSource"] = betterproto.message_field(3)
    backup_sources: List["BackupSource"] = betterproto.message_field(4)
